# ############# create a Pod with 1 container, & project Pod-level fields into the running container as files.
# ---
# apiVersion: v1

# kind: Pod

# metadata:

#   name: kubernetes-downwardapi-volume-example

#   labels:

#     zone: us-est-coast

#     cluster: test-cluster1

#     rack: rack-22

#   annotations:

#     build: two

#     builder: john-doe

# spec:

#   containers:

#     - name: client-container

#       image: k8s.gcr.io/busybox

#       command: ["sh", "-c"]

#       args:

#       - while true; do

#           if [[ -e /etc/podinfo/labels ]]; then

#             echo -en '\n\n'; cat /etc/podinfo/labels; fi;

#           if [[ -e /etc/podinfo/annotations ]]; then

#             echo -en '\n\n'; cat /etc/podinfo/annotations; fi;

#           sleep 5;

#         done;

#       volumeMounts:

#         - name: podinfo

#           mountPath: /etc/podinfo

#   volumes:

#     - name: podinfo

#       downwardAPI:

#         items:

#           - path: "labels"

#             fieldRef:

#               fieldPath: metadata.labels

#           - path: "annotations"

#             fieldRef:

#               fieldPath: metadata.annotations


################ to pass fields that are part of the Pod definition, but taken from the specific container rather than from the Pod overall.

---
apiVersion: v1

kind: Pod

metadata:

  name: kubernetes-downwardapi-volume-example-2

spec:

  containers:

    - name: client-container

      image: k8s.gcr.io/busybox:1.24

      command: ["sh", "-c"]

      args:

      - while true; do

          echo -en '\n';

          if [[ -e /etc/podinfo/cpu_limit ]]; then

            echo -en '\n'; cat /etc/podinfo/cpu_limit; fi;

          if [[ -e /etc/podinfo/cpu_request ]]; then

            echo -en '\n'; cat /etc/podinfo/cpu_request; fi;

          if [[ -e /etc/podinfo/mem_limit ]]; then

            echo -en '\n'; cat /etc/podinfo/mem_limit; fi;

          if [[ -e /etc/podinfo/mem_request ]]; then

            echo -en '\n'; cat /etc/podinfo/mem_request; fi;

          sleep 5;

        done;

      resources:

        requests:

          memory: "32Mi"

          cpu: "125m"

        limits:

          memory: "64Mi"

          cpu: "250m"

      volumeMounts:

        - name: podinfo

          mountPath: /etc/podinfo

  volumes:

    - name: podinfo

      downwardAPI:

        items:

          - path: "cpu_limit"

            resourceFieldRef:

              containerName: client-container

              resource: limits.cpu

              divisor: 1m

          - path: "cpu_request"

            resourceFieldRef:

              containerName: client-container

              resource: requests.cpu

              divisor: 1m

          - path: "mem_limit"

            resourceFieldRef:

              containerName: client-container

              resource: limits.memory

              divisor: 1Mi

          - path: "mem_request"

            resourceFieldRef:

              containerName: client-container

              resource: requests.memory

              divisor: 1Mi


